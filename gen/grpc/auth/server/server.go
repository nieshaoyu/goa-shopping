// Code generated by goa v3.1.1, DO NOT EDIT.
//
// auth gRPC server
//
// Command:
// $ goa gen goa-shopping/design

package server

import (
	"context"
	auth "goa-shopping/gen/auth"
	authpb "goa-shopping/gen/grpc/auth/pb"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the authpb.AuthServer interface.
type Server struct {
	RequestEmailCodeH goagrpc.UnaryHandler
	RequestSmSCodeH   goagrpc.UnaryHandler
}

// ErrorNamer is an interface implemented by generated error structs that
// exposes the name of the error as defined in the expr.
type ErrorNamer interface {
	ErrorName() string
}

// New instantiates the server struct with the auth service endpoints.
func New(e *auth.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		RequestEmailCodeH: NewRequestEmailCodeHandler(e.RequestEmailCode, uh),
		RequestSmSCodeH:   NewRequestSmSCodeHandler(e.RequestSmSCode, uh),
	}
}

// NewRequestEmailCodeHandler creates a gRPC handler which serves the "auth"
// service "RequestEmailCode" endpoint.
func NewRequestEmailCodeHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeRequestEmailCodeRequest, EncodeRequestEmailCodeResponse)
	}
	return h
}

// RequestEmailCode implements the "RequestEmailCode" method in
// authpb.AuthServer interface.
func (s *Server) RequestEmailCode(ctx context.Context, message *authpb.RequestEmailCodeRequest) (*authpb.RequestEmailCodeResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "RequestEmailCode")
	ctx = context.WithValue(ctx, goa.ServiceKey, "auth")
	resp, err := s.RequestEmailCodeH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*authpb.RequestEmailCodeResponse), nil
}

// NewRequestSmSCodeHandler creates a gRPC handler which serves the "auth"
// service "RequestSmSCode" endpoint.
func NewRequestSmSCodeHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeRequestSmSCodeRequest, EncodeRequestSmSCodeResponse)
	}
	return h
}

// RequestSmSCode implements the "RequestSmSCode" method in authpb.AuthServer
// interface.
func (s *Server) RequestSmSCode(ctx context.Context, message *authpb.RequestSmSCodeRequest) (*authpb.RequestSmSCodeResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "RequestSmSCode")
	ctx = context.WithValue(ctx, goa.ServiceKey, "auth")
	resp, err := s.RequestSmSCodeH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*authpb.RequestSmSCodeResponse), nil
}
