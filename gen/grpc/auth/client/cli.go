// Code generated by goa v3.1.1, DO NOT EDIT.
//
// auth gRPC client CLI support package
//
// Command:
// $ goa gen goa-shopping/design

package client

import (
	"encoding/json"
	"fmt"
	auth "goa-shopping/gen/auth"
	authpb "goa-shopping/gen/grpc/auth/pb"
)

// BuildRequestEmailCodePayload builds the payload for the auth
// RequestEmailCode endpoint from CLI flags.
func BuildRequestEmailCodePayload(authRequestEmailCodeMessage string) (*auth.RequestEmailCodePayload, error) {
	var err error
	var message authpb.RequestEmailCodeRequest
	{
		if authRequestEmailCodeMessage != "" {
			err = json.Unmarshal([]byte(authRequestEmailCodeMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, example of valid JSON:\n%s", "'{\n      \"action\": \"register\",\n      \"email\": \"user@example.com\"\n   }'")
			}
		}
	}
	v := &auth.RequestEmailCodePayload{
		Email:  message.Email,
		Action: message.Action,
	}

	return v, nil
}

// BuildRequestSmSCodePayload builds the payload for the auth RequestSmSCode
// endpoint from CLI flags.
func BuildRequestSmSCodePayload(authRequestSmSCodeMessage string) (*auth.RequestSmSCodePayload, error) {
	var err error
	var message authpb.RequestSmSCodeRequest
	{
		if authRequestSmSCodeMessage != "" {
			err = json.Unmarshal([]byte(authRequestSmSCodeMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, example of valid JSON:\n%s", "'{\n      \"action\": \"register\",\n      \"mobile\": \"13838003800\"\n   }'")
			}
		}
	}
	v := &auth.RequestSmSCodePayload{
		Mobile: message.Mobile,
		Action: message.Action,
	}

	return v, nil
}
